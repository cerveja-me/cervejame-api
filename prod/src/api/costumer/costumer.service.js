'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.createCostumer=createCostumer;exports.updateCostumer=updateCostumer;exports.getCostumer=getCostumer;exports.createMyVoucher=createMyVoucher;var _costumer=require('./costumer.query');var _costumer2=require('./costumer.helper');var _pgPromise=require('pg-promise');var _db=require('../../db/db');var _db2=_interopRequireDefault(_db);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}async function createCostumer(costumer){const insertCostumer=new _pgPromise.PreparedStatement('insert-costumer',_costumer.CREATE_COSTUMER,[costumer.id_profile,costumer.name,costumer.photo,costumer.email,costumer.phone]);try{return await _db2.default.one(insertCostumer)}catch(error){throw error}}async function updateCostumer(phone,idProfile){const upCostumer=new _pgPromise.PreparedStatement('update-costumer',_costumer.UPDATE_COSTUMER_PHONE,[phone,idProfile]);try{return await _db2.default.one(upCostumer)}catch(error){throw error}}async function getCostumer(idProfile){const findCostumer=new _pgPromise.PreparedStatement('find-costumer',_costumer.GET_COSTUMER_BY_ID,[idProfile]);try{return await _db2.default.one(findCostumer)}catch(error){throw error}}async function createMyVoucher(idCostumer,name){let v=(0,_costumer2.generateVoucher)(name);const insertVoucher=new _pgPromise.PreparedStatement('insert-voucher-costumer',_costumer.CREATE_MY_VOUCHER,[idCostumer,v,name]);try{let voucher=await _db2.default.one(insertVoucher);const updateCostVoucher=new _pgPromise.PreparedStatement('update-cost-voucher',_costumer.UPDATE_COSTUMER_VOUCHER,[voucher.id]);return await _db2.default.one(updateCostVoucher)}catch(error){throw error}}